name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: action/

      - run: |
          cd action
          npm ci || npm install
        shell: bash

      - run: |
          cd action
          npm run lint

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
        aqtversion:
          - null  # use whatever the default is
        src-doc-examples:
          - false
        qt:
          - version: "6.7.0"
            requested: "6.7.0"
            modules: qtwebengine qtpositioning qtwebchannel
          - tools-only-build: true
            add-tools-to-path: true
        cache:
          - uncached
        include:
          - os: windows-2022
            dir: '/'
            qt:
              version: "6.7.0"
              requested: "6.7.0"
              modules: qtwebengine qtpositioning qtwebchannel


    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: action/

      - run: |
          cd action
          npm ci || npm install
        shell: bash

      - run: |
          cd action
          npm run build

      - name: Install Qt with options and default aqtversion
        if: ${{ !matrix.aqtversion && matrix.qt.version }}
        uses: ./
        with:
          dir: ${{ matrix.dir }}
          modules: ${{ matrix.qt.modules }}
          version: ${{ matrix.qt.requested }}
          tools: tools_qtcreator_gui,qt.tools.qtcreator_gui
          cache: ${{ matrix.cache == 'cached' }}

      - name: Install Qt with options and specified aqtversion
        if: ${{ matrix.aqtversion && matrix.qt.version }}
        uses: ./
        with:
          aqtversion: ${{ matrix.aqtversion }}
          dir: ${{ matrix.dir }}
          modules: ${{ matrix.qt.modules }}
          version: ${{ matrix.qt.requested }}
          tools: tools_qtcreator_gui,qt.tools.qtcreator_gui
          cache: ${{ matrix.cache == 'cached' }}

      - name: Test QT_ROOT_DIR
        if: ${{ matrix.qt.version }}
        shell: bash
        run: |
          set -x
          # Check that QT_ROOT_DIR contains a qmake of some kind
          ls "${QT_ROOT_DIR}/bin/" | grep qmake

      - name: Configure test project on windows
        if: ${{ matrix.qt.version && startsWith(matrix.os, 'windows') && !matrix.skip-test-project }}
        env:
          QT_VERSION: ${{ matrix.qt.version }}
        run: |
          cd tests/TestWithModules
          for /f "delims=" %%d in ( 'vswhere.exe -latest -property installationPath' ) do @( call "%%d\VC\Auxiliary\Build\vcvars64.bat" )
          IF "%QT_VERSION:~0,1%"=="5" ( dir %Qt5_DIR% ) ELSE ( dir %QT_ROOT_DIR%\lib\cmake )
          qmake
          cmake -S . -B ./build
        shell: cmd

      - name: Archive production artifacts
        if: ${{ matrix.qt.version && startsWith(matrix.os, 'windows') && !matrix.skip-test-project }}
        uses: actions/upload-artifact@v4
        with:
          name: dist-without-markdown
          path: |
            tests/TestWithModules
